# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'toDoList.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(480, 393)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.addItempushButton = QtWidgets.QPushButton(self.centralwidget,clicked = lambda: self.add_it())
        self.addItempushButton.setGeometry(QtCore.QRect(40, 60, 101, 41))
        self.addItempushButton.setObjectName("addItempushButton")
        self.deleteItempushButton = QtWidgets.QPushButton(self.centralwidget,clicked = lambda: self.delete_it())
        self.deleteItempushButton.setGeometry(QtCore.QRect(140, 60, 101, 41))
        self.deleteItempushButton.setObjectName("deleteItempushButton")
        self.clearAllpushButton = QtWidgets.QPushButton(self.centralwidget,clicked = lambda: self.clear_it())
        self.clearAllpushButton.setGeometry(QtCore.QRect(240, 60, 101, 41))
        self.clearAllpushButton.setObjectName("clearAllpushButton")
        self.addItem_lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.addItem_lineEdit.setGeometry(QtCore.QRect(40, 19, 401, 31))
        self.addItem_lineEdit.setObjectName("addItem_lineEdit")
        self.myList_listWidget = QtWidgets.QListWidget(self.centralwidget)
        self.myList_listWidget.setGeometry(QtCore.QRect(40, 120, 401, 211))
        self.myList_listWidget.setObjectName("myList_listWidget")
        self.databasepushButton = QtWidgets.QPushButton(self.centralwidget,clicked = lambda: self.save_it())
        self.databasepushButton.setGeometry(QtCore.QRect(340, 60, 101, 41))
        self.databasepushButton.setObjectName("databasepushButton")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 480, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.addItempushButton.setText(_translate("MainWindow", "Add Item"))
        self.deleteItempushButton.setText(_translate("MainWindow", "Delete Item"))
        self.clearAllpushButton.setText(_translate("MainWindow", "Clear All"))
        self.databasepushButton.setText(_translate("MainWindow", "Add to database"))

    # Add Item To List
    def add_it(self):
        # Grab the item from the list box
        item = self.addItem_lineEdit.text()

        # Add item to list
        self.myList_listWidget.addItem(item)

        # Clear the item box
        self.addItem_lineEdit.setText("")

    # Delete Item From List
    def delete_it(self):
        # Grab the selected row or current row
        clicked = self.myList_listWidget.currentRow()

        # Delete selected row
        self.myList_listWidget.takeItem(clicked)

    # Clear All Items From List
    def clear_it(self):
        self.myList_listWidget.clear()

    def save_it(self):
        items = []

        for index in range(self.myList_listWidget.count()):
            items.append(self.myList_listWidget.item(index))

        for item in items:
            print(item.text())

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
